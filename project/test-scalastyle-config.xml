<scalastyle>
 <name>Scalastyle configuration</name>
 <check level="error" class="org.scalastyle.file.FileLengthChecker" enabled="true">
  <parameters>
   <parameter name="maxFileLength"><![CDATA[800]]></parameter>
  </parameters>
 </check>
 <check level="error" class="org.scalastyle.file.FileLineLengthChecker" enabled="true">
  <parameters>
   <parameter name="maxLineLength"><![CDATA[200]]></parameter>
   <parameter name="tabSize"><![CDATA[2]]></parameter>
  </parameters>
 </check>
 <check level="error" class="org.scalastyle.file.FileTabChecker" enabled="true" />
 <check level="error" class="org.scalastyle.file.NewLineAtEofChecker" enabled="true" />
 <check level="warning" class="org.scalastyle.file.RegexChecker" enabled="true">
  <parameters>
   <parameter name="regex"><![CDATA[println]]></parameter>
  </parameters>
 </check>
 <check level="error" class="org.scalastyle.file.WhitespaceEndOfLineChecker" enabled="false" />
 <check level="error" class="org.scalastyle.scalariform.BlockImportChecker" enabled="false"/>
 <check level="error" class="org.scalastyle.scalariform.ClassNamesChecker" enabled="false">
  <parameters>
   <parameter name="regex"><![CDATA[^[A-Z][A-Za-z]*$]]></parameter>
  </parameters>
 </check>
 <check level="error" class="org.scalastyle.scalariform.CovariantEqualsChecker" enabled="true" />
 <check level="error" class="org.scalastyle.scalariform.CyclomaticComplexityChecker" enabled="true">
  <parameters>
   <parameter name="maximum"><![CDATA[10]]></parameter>
  </parameters>
 </check>
 <check level="error" class="org.scalastyle.scalariform.DeprecatedJavaChecker" enabled="true" />
 <check level="error" class="org.scalastyle.scalariform.DisallowSpaceAfterTokenChecker" enabled="false">
  <parameters>
   <parameter name="tokens">LPAREN</parameter>
  </parameters>
 </check>
 <check level="error" class="org.scalastyle.scalariform.EmptyClassChecker" enabled="true" />
 <check level="error" class="org.scalastyle.scalariform.EnsureSingleSpaceAfterTokenChecker" enabled="false">
  <parameters>
   <parameter name="tokens">COLON, IF</parameter>
  </parameters>
 </check>
 <check level="error" class="org.scalastyle.scalariform.EqualsHashCodeChecker" enabled="true" />
 <check level="error" class="org.scalastyle.scalariform.FieldNamesChecker" enabled="true">
  <parameters>
   <parameter name="regex"><![CDATA[^[a-z(][A-Za-z0-9,]*$]]></parameter>
  </parameters>
 </check>
 <check level="error" class="org.scalastyle.scalariform.ForBraceChecker" enabled="true" />
 <check level="error" class="org.scalastyle.scalariform.IfBraceChecker" enabled="true">
  <parameters>
   <parameter name="singleLineAllowed">true</parameter>
   <parameter name="doubleLineAllowed">true</parameter>
  </parameters>
 </check>
 <check level="error" class="org.scalastyle.scalariform.IllegalImportsChecker" enabled="true">
  <parameters>
   <parameter name="illegalImports"><![CDATA[sun._,java.awt._]]></parameter>
  </parameters>
 </check>
 <check level="error" class="org.scalastyle.scalariform.ImportGroupingChecker" enabled="true" />
 <check level="error" class="org.scalastyle.scalariform.ImportOrderChecker" enabled="false" />
 <check level="error" class="org.scalastyle.scalariform.LowercasePatternMatchChecker" enabled="true" />
 <check level="error" class="org.scalastyle.scalariform.MagicNumberChecker" enabled="false">
  <parameters>
   <parameter name="ignore"><![CDATA[-1,0,1,2,3]]></parameter>
  </parameters>
 </check>
 <check level="error" class="org.scalastyle.scalariform.MethodLengthChecker" enabled="true">
  <parameters>
   <parameter name="maxLength"><![CDATA[30]]></parameter>
  </parameters>
 </check>
 <check level="error" class="org.scalastyle.scalariform.MethodNamesChecker" enabled="true">
  <parameters>
   <parameter name="regex"><![CDATA[^[a-z][A-Za-z0-9]*$]]></parameter>
   <parameter name="ignoreOverride">true</parameter>
  </parameters>
 </check>
 <check level="error" class="org.scalastyle.scalariform.MultipleStringLiteralsChecker" enabled="true">
  <parameters>
   <parameter name="allowed"><![CDATA[6]]></parameter>
   <parameter name="ignoreRegex"><![CDATA[^""?$|\\n]]></parameter>
  </parameters>
 </check>
 <check level="error" class="org.scalastyle.scalariform.NoCloneChecker" enabled="true" />
 <check level="error" class="org.scalastyle.scalariform.NoFinalizeChecker" enabled="true" />
 <check level="error" class="org.scalastyle.scalariform.NoWhitespaceBeforeLeftBracketChecker" enabled="true" />
 <check level="error" class="org.scalastyle.scalariform.NoWhitespaceAfterLeftBracketChecker" enabled="true" />
 <check level="error" class="org.scalastyle.scalariform.NonASCIICharacterChecker" enabled="false" />
 <check level="warning" class="org.scalastyle.scalariform.NotImplementedErrorUsage" enabled="true" />
 <check level="error" class="org.scalastyle.scalariform.NullChecker" enabled="true" />
 <check level="error" class="org.scalastyle.scalariform.NumberOfMethodsInTypeChecker" enabled="true">
  <parameters>
   <parameter name="maxMethods"><![CDATA[30]]></parameter>
  </parameters>
 </check>
 <check level="error" class="org.scalastyle.scalariform.NumberOfTypesChecker" enabled="true">
  <parameters>
   <parameter name="maxTypes"><![CDATA[20]]></parameter>
  </parameters>
 </check>
 <check level="error" class="org.scalastyle.scalariform.ObjectNamesChecker" enabled="true">
  <parameters>
    <parameter name="regex"><![CDATA[^[A-Z][A-Za-z0-9]*$]]></parameter>
  </parameters>
 </check>
 <check level="error" class="org.scalastyle.scalariform.PackageObjectNamesChecker" enabled="true">
  <parameters>
   <parameter name="regex"><![CDATA[^[a-z][A-Za-z]*$]]></parameter>
  </parameters>
 </check>
 <check level="error" class="org.scalastyle.scalariform.ParameterNumberChecker" enabled="true">
  <parameters>
   <parameter name="maxParameters"><![CDATA[8]]></parameter>
  </parameters>
 </check>
 <check level="error" class="org.scalastyle.scalariform.PatternMatchAlignChecker" enabled="false" />
 <check level="error" class="org.scalastyle.scalariform.ProcedureDeclarationChecker" enabled="true" />
 <check level="error" class="org.scalastyle.scalariform.PublicMethodsHaveTypeChecker" enabled="true">
  <parameters>
   <parameter name="ignoreOverride">true</parameter>
  </parameters>
 </check>
 <check level="error" class="org.scalastyle.scalariform.RedundantIfChecker" enabled="true" />
 <check level="error" class="org.scalastyle.scalariform.ReturnChecker" enabled="true" />
 <check level="error" class="org.scalastyle.scalariform.ScalaDocChecker" enabled="false" />
 <check level="error" class="org.scalastyle.scalariform.SimplifyBooleanExpressionChecker" enabled="true" />
 <check level="error" class="org.scalastyle.scalariform.SpaceAfterCommentStartChecker" enabled="false" />
 <check level="error" class="org.scalastyle.scalariform.SpacesAfterPlusChecker" enabled="false" />
 <check level="error" class="org.scalastyle.scalariform.SpacesBeforePlusChecker" enabled="false" />
 <check level="error" class="org.scalastyle.scalariform.StructuralTypeChecker" enabled="true" />
 <check level="warning" class="org.scalastyle.scalariform.TodoCommentChecker" enabled="true">
  <parameters>
   <parameter name="words"><![CDATA[TODO|FIXME|todo]]></parameter>
  </parameters>
 </check>
 <check level="error" class="org.scalastyle.scalariform.TokenChecker" enabled="false">
  <parameters>
   <parameter name="regex">^[ai]sInstanceOf$</parameter>
  </parameters>
  <customMessage>Avoid casting.</customMessage>
 </check>
 <check level="error" class="org.scalastyle.scalariform.UnderscoreImportChecker" enabled="false" />
 <check level="error" class="org.scalastyle.scalariform.UppercaseLChecker" enabled="true" />
 <check level="error" class="org.scalastyle.scalariform.VarFieldChecker" enabled="false" />
 <check level="error" class="org.scalastyle.scalariform.VarLocalChecker" enabled="true" />
 <check level="error" class="org.scalastyle.scalariform.WhileChecker" enabled="true" />
 <check level="error" class="org.scalastyle.scalariform.XmlLiteralChecker" enabled="false" />

</scalastyle>
